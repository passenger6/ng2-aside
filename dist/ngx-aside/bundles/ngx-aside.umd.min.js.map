{"version":3,"sources":["ng://ngx-aside/lib/overlay.component.ts","ng://ngx-aside/lib/aside.animations.ts","ng://ngx-aside/lib/aside.component.ts","ng://ngx-aside/lib/aside.module.ts"],"names":["NgxOverlayComponent","this","showStatus","Component","args","selector","template","styles","animations","trigger","transition","style","opacity","animate","slideAnimations","transform","NgxAsideComponent","_resolver","vcRef","EventEmitter","rootViewContainerRef","prototype","hideAside","event","cancel","observers","length","emit","hide","submitAside","submit","handleEscape","closeOnEscape","preventDefault","visibleStatus","backdrop","destroy","show","addOverlay","showOverlay","OverlayComponentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","ViewContainerRef","Output","Input","HostListener","NgxAsideModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import {\n  Component\n} from '@angular/core';\n\nimport {\n  trigger,\n  transition,\n  style,\n  animate\n} from '@angular/animations';\n\n@Component({\n  selector: 'ngx-aside-overlay',\n  template: `\n        <div class=\"overlay\" [@show]=\"showStatus\"></div>`,\n  styles: [`.overlay {\n        z-index: 1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: currentColor;\n        opacity: .6;\n    }`],\n  animations: [\n    trigger('show', [\n      transition('void => *', [\n        style([{ opacity: 0 }]),\n        animate(100,\n          style([{ opacity: .6 }])\n        )\n      ])\n    ])\n  ]\n})\n\nexport class NgxOverlayComponent {\n  public showStatus: boolean;\n\n  constructor() {\n    this.showStatus = true;\n  }\n}\n","import { transition, style, animate, trigger, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const slideAnimations: AnimationTriggerMetadata = trigger('slide', [\n\n  transition('void => left', [\n    style({\n      opacity: .6,\n      transform: 'translate3d(-100%,0,0)'\n    }),\n    animate('.2s cubic-bezier(0.215, 0.610, 0.355, 1)',\n      style({\n        opacity: 1,\n        transform: 'translateZ(0)'\n      }))\n  ]),\n\n  transition('void => right', [\n    style({\n      opacity: .6,\n      transform: 'translate3d(100%,0,0)'\n    }),\n    animate('.2s cubic-bezier(0.215, 0.610, 0.355, 1)',\n      style({\n        opacity: 1,\n        transform: 'translateZ(0)'\n      }))\n  ]),\n\n  transition('left => void', [\n    animate('.2s cubic-bezier(0.165, 0.84, 0.44, 1)', style({\n      opacity: 0,\n      transform: 'translate3d(-50%,0,0)'\n    }\n    ))\n  ]),\n\n  transition('right => void', [\n    animate('.2s cubic-bezier(0.165, 0.84, 0.44, 1)', style({\n      opacity: 0,\n      transform: 'translate3d(50%,0,0)'\n    }\n    ))\n  ])\n]);\n","import {\n  Component,\n  Input,\n  ViewContainerRef,\n  Output,\n  EventEmitter,\n  ComponentRef,\n  HostBinding,\n  OnInit,\n  HostListener,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nimport { NgxOverlayComponent } from './overlay.component';\nimport { slideAnimations } from './aside.animations';\n\n@Component({\n  selector: 'ngx-aside',\n  template: `<aside [@slide]=\"position\" *ngIf=\"visibleStatus\" [className]=\"position\">\n\n    <!-- Custom Header -->\n    <ng-content *ngIf=\"!showDefaultHeader\" class=\"aside-title-huj\" select=\"header\">\n\n\n    </ng-content>\n    <!-- End Custom Header -->\n\n\n    <!-- Default Header -->\n    <header *ngIf=\"showDefaultHeader\">\n        <div class=\"aside-title\">\n            {{title}}\n        </div>\n\n        <div (click)=\"hideAside($event)\" class=\"aside-button-close\">\n            &times;\n        </div>\n\n    </header>\n    <!-- End Custom Header -->\n\n\n    <section>\n        <div class=\"aside-container\">\n            <ng-content></ng-content>\n        </div>\n    </section>\n\n    <!-- Custom Footer -->\n    <ng-content *ngIf=\"!showDefaultFooter\" select=\"footer\"></ng-content>\n    <!-- End Custom Footer -->\n\n    <!-- Default Footer -->\n    <footer *ngIf=\"showDefaultFooter\">\n\n        <button (click)=\"hideAside($event)\" type=\"button\" class=\"btn btn-secondary btn-cancel\">\n         {{cancelButtonTitle}}</button>\n\n        <button (click)=\"submitAside($event)\" type=\"button\" class=\"btn btn-primary btn-submit\">{{submitButtonTitle}}</button>\n\n\n    </footer>\n    <!--End  Default Footer -->\n\n</aside>`,\n  styles: [`:host *{box-sizing:border-box}:host aside.right{right:0;top:0;bottom:0}:host aside.left{left:0;top:0;bottom:0}aside{will-change:opacity;display:flex;flex-direction:column;align-items:stretch;position:fixed;width:auto;max-width:50%;background-color:#fff;z-index:2;box-shadow:-6px 3px 11px 0 rgba(0,0,0,.23);padding:0 16px;height:100vh}section{overflow:auto;flex-grow:1}header{font-size:20px;display:flex;flex-direction:row;justify-content:space-between;align-items:center;width:100%;height:64px;flex-shrink:0}header .aside-button-close{width:20px;text-align:center;opacity:.8}header .aside-button-close:hover{cursor:pointer;opacity:1}footer{flex-shrink:0;border-top:1px solid #e5e5e5;display:flex;align-items:flex-start;padding:16px 0}footer button{margin-right:6px}.left footer{justify-content:flex-end}.right footer{justify-content:flex-start}:host.left aside{box-shadow:6px -1px 11px 0 rgba(0,0,0,.23)}:host.left.footer{justify-content:flex-end}`],\n  animations: [slideAnimations]\n})\n\n/*\n\n TODO: Configurable parameters\n width\n max-width\n\n TODO: @OutputEvents\n @OutputFunctions ?\n\n ----\n\n */\n\nexport class NgxAsideComponent {\n\n  @Output() public cancel: EventEmitter<any> = new EventEmitter();\n  @Output() public submit: EventEmitter<any> = new EventEmitter();\n\n  @Input() public position = 'right';\n  @Input() public showOverlay = true;\n  @Input() public closeOnEscape = true;\n\n  @Input() public showDefaultFooter = true;\n  @Input() public showDefaultHeader = true;\n\n  @Input() public title = '';\n  @Input() public cancelButtonTitle = 'Cancel';\n  @Input() public submitButtonTitle = 'Submit';\n\n  public visibleStatus: boolean = false;\n  private rootViewContainerRef: ViewContainerRef;\n  private backdrop: ComponentRef<{}>;\n\n  constructor(private _resolver: ComponentFactoryResolver, private vcRef: ViewContainerRef) {\n    this.rootViewContainerRef = vcRef;\n  }\n\n  public hideAside(event) {\n    if (this.cancel.observers.length > 0) {\n      this.cancel.emit(event);\n    } else { // If we don`t have any subscribers\n      this.hide();\n    }\n\n  }\n\n  public submitAside(event) {\n    if (this.cancel.observers.length > 0) {\n      this.submit.emit();\n    } else {  // If we don`t have any subscribers\n      this.hide();\n\n    }\n  }\n\n  @HostListener('document:keydown.esc', ['$event'])\n  public handleEscape(event) {\n\n    if (this.closeOnEscape) {\n      event.preventDefault();\n      this.hideAside(event);\n    }\n\n    return false;\n  }\n\n  public hide() {\n\n    this.visibleStatus = false;\n\n    if (!this.backdrop) {\n      return;\n    }\n\n    this.backdrop.destroy();\n    this.backdrop = void 0;\n\n  }\n\n  public show() {\n    this.visibleStatus = true;\n    this.addOverlay();\n  }\n\n  private addOverlay() {\n    if (!this.backdrop && this.showOverlay) {\n      const OverlayComponentFactory = this._resolver.resolveComponentFactory(NgxOverlayComponent);\n      this.backdrop = this.rootViewContainerRef.createComponent(OverlayComponentFactory, 0);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxOverlayComponent } from './overlay.component';\nimport { NgxAsideComponent } from './aside.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxAsideComponent,\n    NgxOverlayComponent\n  ],\n  providers: [],\n  entryComponents: [\n    NgxAsideComponent,\n    NgxOverlayComponent\n  ],\n  exports: [\n    NgxAsideComponent,\n    NgxOverlayComponent\n  ]\n})\nexport class NgxAsideModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxAsideModule,\n      providers: []\n    };\n  }\n}\n"]}